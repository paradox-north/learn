git init   //把当前目录变成git可以管理的repository


git status   //查看stage（index）暂存区状态
git diff   //查看work directionary 与 master 内文件不同的内容
git add <filename>   //提交到暂存区
git commit -m "illustration"    //将暂存区所有文件提交到仓库，附带说明
每次commit就是提交了一次版本
git log    //查看提交日志（--pretty=onrline为精简版）
git reset --hard HEAD^  //版本回退到HEAD的上一个
git reset --hard <commit_id> //版本回退到<commit_id>


Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向append GPL：

┌────┐
│HEAD│
└────┘
   │
   └──> ○ append GPL
        │
 	        ○ add distributed
        │
 	        ○ wrote a readme file
改为指向add distributed：

┌────┐
│HEAD│
└────┘
   │
   │    ○ append GPL
   │    │
   └──> ○ add distributed
        │
      	        ○ wrote a readme file
      	        


git reflog   //查看历史命令

$ git reflog
e475afc HEAD@{1}: reset: moving to HEAD^      //commit_id 为执行完命令后的id
1094adb (HEAD -> master) HEAD@{2}: commit: append GPL
e475afc HEAD@{3}: commit: add distributed
eaadf4e HEAD@{4}: commit (initial): wrote a readme file

< this should be a picture >

远程仓库：
1、在用户主目录下创建SSH KEY
$ ssh-keygen -t rsa -C "youremail@example.com"
出现
.ssh/
	id_rsa
	id_rsa.pub
2、登录github，点add ssh key，在key文本框中填入id_rsa.pub的内容，title不重要
3、在Create a new repo中创建新仓库
4、将本地仓库与github上的仓库关联
   在本地仓库下运行
   git remote add origin https://github.com/paradox-north/learn.git
   远程库的名字为origin
5、推送本地库所有内容（master分枝）
   git push -u origin master
   在第一次推送时，加上了-u参数
6、以后推送最新修改时，只需
   git push origin master

